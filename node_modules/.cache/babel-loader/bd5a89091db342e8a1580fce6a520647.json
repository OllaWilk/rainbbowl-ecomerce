{"ast":null,"code":"/* selectors */\nexport const getCart = ({\n  cart\n}) => cart;\n/* action name creator */\n\nconst reducerName = 'cart';\n\nconst createActionName = name => `app/${reducerName}/${name}`;\n/* action types */\n\n\nconst ADD_TO_CART = createActionName('ADD_TO_CART');\nconst CHANGE_AMOUNT = createActionName('CHANGE_AMOUNT');\nconst ADD_NOTES = createActionName('ADD_NOTES');\nconst REMOVE_PRODUCT = createActionName('REMOVE_PRODUCT');\n/* action creators */\n\nexport const addProduct = payload => ({\n  payload,\n  type: ADD_TO_CART\n});\nexport const changeAmount = payload => ({\n  payload,\n  type: CHANGE_AMOUNT\n});\nexport const addNotes = payload => ({\n  payload,\n  type: ADD_NOTES\n});\nexport const removeProduct = payload => ({\n  payload,\n  type: REMOVE_PRODUCT\n});\n/* thunk creators */\n\n/* reducer */\n\nexport const reducer = (statePart = {}, action = {}) => {\n  console.log('state', statePart);\n  console.log('action', action);\n\n  switch (action.type) {\n    case ADD_TO_CART:\n      {\n        return { ...statePart,\n          products: [...statePart.products, { ...action.payload.product,\n            amount: action.payload.amount\n          }],\n          amount: statePart.amount + action.payload.amount\n        };\n      }\n\n    case CHANGE_AMOUNT:\n      {\n        return { ...statePart,\n          products: statePart.products.map(el => {\n            return el.id === action.payload.id ? { ...el,\n              amount: action.payload.amount\n            } : el;\n          })\n        };\n      }\n\n    case ADD_NOTES:\n      {\n        return { ...statePart,\n          products: statePart.products.map(el => {\n            return el.id === action.payload.id ? { ...el,\n              notes: action.payload.notes\n            } : el;\n          })\n        };\n      }\n\n    case REMOVE_PRODUCT:\n      {\n        return { ...statePart,\n          products: statePart.products.filter(el => el.id !== action.payload.id)\n        };\n      }\n\n    default:\n      {\n        return statePart;\n      }\n  }\n};","map":{"version":3,"sources":["/home/ola/Dokumenty/Kodilla/rainbbowl/rainbbowl-ecomerce/src/redux/cartRedux.js"],"names":["getCart","cart","reducerName","createActionName","name","ADD_TO_CART","CHANGE_AMOUNT","ADD_NOTES","REMOVE_PRODUCT","addProduct","payload","type","changeAmount","addNotes","removeProduct","reducer","statePart","action","console","log","products","product","amount","map","el","id","notes","filter"],"mappings":"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","sourcesContent":["/* selectors */\nexport const getCart = ({ cart }) => cart;\n\n/* action name creator */\nconst reducerName = 'cart';\nconst createActionName = name =>  `app/${reducerName}/${name}`;\n\n/* action types */\nconst ADD_TO_CART = createActionName('ADD_TO_CART');\nconst CHANGE_AMOUNT = createActionName('CHANGE_AMOUNT');\nconst ADD_NOTES = createActionName('ADD_NOTES');\nconst REMOVE_PRODUCT = createActionName('REMOVE_PRODUCT');\n\n/* action creators */\nexport const addProduct = (payload) => ({ payload, type: ADD_TO_CART });\nexport const changeAmount = payload => ({ payload, type: CHANGE_AMOUNT });\nexport const addNotes = payload => ({ payload, type: ADD_NOTES });\nexport const removeProduct = payload => ({ payload, type: REMOVE_PRODUCT });\n\n/* thunk creators */\n\n/* reducer */\nexport const reducer = (statePart = {}, action = {}) => {\n  console.log('state', statePart);\n  console.log('action', action);\n  switch (action.type) {\n    case ADD_TO_CART: {\n      return {\n        ...statePart,\n        products: [...statePart.products, { ...action.payload.product, amount: action.payload.amount } ],\n        amount: statePart.amount + action.payload.amount,\n      };\n    }\n    case CHANGE_AMOUNT: {\n      return {\n        ...statePart,\n        products: statePart.products.map(el => {\n          return el.id === action.payload.id ?\n            { ...el, amount: action.payload.amount }\n            : el;\n        }),\n      };\n    }\n    case ADD_NOTES: {\n      return {\n        ...statePart,\n        products: statePart.products.map(el => {\n          return el.id === action.payload.id ?\n            { ...el, notes: action.payload.notes }\n            : el;\n        }),\n      };\n    }\n    case REMOVE_PRODUCT: {\n      return {\n        ...statePart,\n        products: statePart.products.filter(el => el.id !== action.payload.id),\n      };\n    }\n    default: {\n      return statePart;\n    }\n  }\n};"]},"metadata":{},"sourceType":"module"}